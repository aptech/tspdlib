

/*
**> kpss
**  Kwiatkowski, D., Phillips, P. C., Schmidt, P., & Shin, Y. (1992).
**  Testing the null hypothesis of stationarity against the alternative of a unit root:
**  How sure are we that economic time series have a unit root?.
**  Journal of econometrics, 54(1-3), 159-178.
**
**  Format:  {kpss, cv} = LMkpss(y, model, l, varm);
**
**  Input:   Y	     -  Nx1 matrix, data,
**
**           model   - 	1 = model with constant
**                      2 = model with constant and trend
**
**           l       -  Optional, bandwidth for spectral window.
**                      Default = round(4 * (T/100)^(2/9)).
**
**           varm    -  Optional, long-run consistent variance estimation method.
**                      Default = 1 [iid].
**                      1 = iid;
**                      2 = Bartlett
**                      3 = Quadratic Spectral (QS);
**                      4 = SPC with Bartlett /see (Sul, Phillips & Choi, 2005)
**                      5 = SPC with QS;
**                      6 = Kurozumi with Bartlett
**                      7 = Kurozumi with QS
**                      Updated from Carrion-i-Silvestre & Sanso (2007) GAUSS codes.
**                      See:
**                      Carrion-i-Silvestre, J. L., & Sanso, A. (2006).
**                      A guide to the computation of stationarity tests.
**                      Empirical Economics, 31(2), 433.
**
**  Output:  kpss    -  KPSS stat for stationarity
**           cv      -  1%, 5%, and 10% critical values
**
**  Author: Saban Nazlioglu
-- The author makes no performance guarantees.
-- for public non-commercial use only.
-- for any bugs, please send e-mail to snazlioglu@pau.edu.tr
**
*/

proc(2) = LMkpss(y, model, ...);
    local t, z, lm_KPSS, ssr, cv, bwl_dftl, l, varm, dt_vec;
    
    t = rows(y);
    bwl_dftl = round(4 * (t/100)^(2/9));
    
    { l, varm } = dynargsGet(1|2, bwl_dftl, 1);
    { dt_vec, y } =_checkfordate(y);
    
    "KPSS tests for stationarity:";
    if model == 1;
        z = ones(t,1);
    elseif model == 2;
        z = ones(t,1)~seqa(1,1,t);
    else;
        errorlog "'lmkpss' : Invalid model option.";
        end;
    endif;
    
    { lm_KPSS, ssr } = _get_kpss(y, z, varm, l, T, 1);
    
    if model == 1;
        cv     = 0.739 ~ 0.463 ~ 0.347 ;
    elseif model == 2;
        cv     = 0.216 ~ 0.146 ~ 0.119 ;
    endif;
    
    // T adjusted critical values based on response surfaces
    cv = _get_cv_KPSSrsf(model, T);

    _printHeaderTSPDLIB(0, varm, 1, model, 0, 0, "KPSS", "Stationarity", 0);
    
    // Print results
    local top, side, stats, dec, colwidth;
    top = "KPSS Stat:";
    side = "";
    stats = lm_kpss;
    dec = 3;
    colwidth = 15;
    
    _printStatsTable(top, side, stats, cv, dec, colwidth, 0);
    _printConclusion(lm_KPSS, cv, 1, "stationarity");
    
    retp(lm_kpss, cv);
endp;


